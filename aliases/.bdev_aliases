#!/bin/bash
# ====================================
#         FIX WSL DNS ISSUES
# ====================================
# From: https://gist.github.com/coltenkrauter/608cfe02319ce60facd76373249b8ca6


# STILL NOT WORKING SOMETIMES
# Deleting etc/resolv.conf and recreating seemed to work last time, but not why (https://github.com/microsoft/WSL/issues/5420) 
# More here: https://github.com/microssoft/WSL/issues/3438
# TRY: 
#   - removing /etc/resolv.conf and recreating
#   - chattr +i /etc/resolv.conf IS required
#   - add only the single nameserver to /etc/resolv.conf``
#   - check /mnt/wsl/resolv.conf

wsl-fix-connection () {
  sudo true
  wsl-conf-update
  echo "\nresolv.conf: add new DNS $(wsl-dns-get)\n"
  wsl-dns-add-auto
  echo "\n "
}
# Add required lines to /etc/wsl.conf
wsl-conf-update () {
  # Create wsl.conf if it doesnt exist
  if [ ! -f /etc/wsl.conf ]
    then sudo touch /etc/wsl.conf; echo "\n/etc/wsl.conf created"
  fi
  # Add lines to wsl.conf if they're not already there
  if grep -Pzoq '[network].*\n.*generateResolvConf = false' /etc/wsl.conf
  then
    echo "\n/etc/wsl.conf exists with required lines"
  else 
    echo "\n/etc/wsl.conf requires additions"
    echo "PREVIOUS /etc/wsl.conf:"; cat /etc/wsl.conf | sed '/^[[:space:]]*$/d'
    # Make /etc/wsl.conf writeable
    sudo chattr -i /etc/wsl.conf
    # Add required lines
    echo "[network]\ngenerateResolvConf = false" | sudo tee -a /etc/wsl.conf
    # Make unwriteable
    sudo chattr +i /etc/wsl.conf
    # Print wsl.conf
    echo "\nNEW /etc/wsl.conf:"
    cat /etc/wsl.conf | sed '/^[[:space:]]*$/d'
  fi  
}
wsl-dns-add-auto () {
  if [ "$1" ]
    # Check that no arguments were given
    then 
      echo "No arguments expected, but 1+ supplied (e.g. wsl-dsn-add-auto)"
    # Get the wifi DNS from windows and add to resolv.conf
    else 
      # Get DNS and trim any whitespace
      DNS=$(wsl-dns-get | awk '{$1=$1};1')
      wsl-dns-add "$DNS" > /dev/null
      wsl-clean-resolv-conf
  fi
}
wsl-dns-add () {
  # Check an argument was provided
  if [ ! "$1" ]; then 
    echo "No DNS given (e.g. wsl-dns-add 132.23.42.7)"
  else
    # Make resolv.conf writeable
    sudo chattr -i /etc/resolv.conf
    # Add the line 'nameserver X.X.X.X' { suppress echo to console; }
    echo "nameserver $1" | sudo tee -a /etc/resolv.conf > /dev/null
    # Make resolv.conf unwriteable
    sudo chattr +i /etc/resolv.conf
    # Print the new contents of resolv.conf
    wsl-print-resolv-conf
  fi
}
wsl-dns-remove () {
  # Check an argument was provided
  if [ ! "$1" ]; then 
    echo "No DNS given (e.g. wsl-remove-dns 132.23.42.7)"
  # Check if the argument matches one or more lines in resolv.conf
  elif grep -q "$1" /etc/resolv.conf; then
    # Make resolv.conf writeable
    sudo chattr -i /etc/resolv.conf
    # remove matched lines
    sudo sed -i "/$1/d" /etc/resolv.conf
    # Make unwriteable
    sudo chattr +i /etc/resolv.conf
    wsl-print-resolv-conf
  # If argument not in resolv.conf, print error msg
  else
    echo "DNS $1 not found in /etc/resolv.conf (see contents with wsl-print-resolv-conf)"
  fi
}
wsl-dns-query () {
  # Print all headings with DNS server entries in output of ipconfig /all (and the entries) 
  echo "$(ipconfig.exe /all)" | \
    awk '/^[A-Za-z].*:/{heading=$0; next} /DNS Servers/{print heading; print $0}'
}
wsl-dns-get () {
  # Method from ChatGPT: Get ipconfig.exe output from windows ipconfig command
  echo "$(ipconfig.exe /all)" | \
    ## Get the wifi block of the output
    # awk '/Wireless LAN adapter WiFi:/,/^$/ {if (/^$/) exit; else print}' |  \
    # Get the DNS Servers line
    grep "DNS Servers" | \
    # Return just the WIFI DNS number X.X.X.X
    awk '{print $NF}' |
    grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' |
    cat
}
wsl-clean-resolv-conf () {
  # Make resolv.conf writeable
  sudo chattr -i /etc/resolv.conf
  # Delete leading/trailing whitespaces
  awk '{$1=$1};1' < /etc/resolv.conf | sponge test.txt
  # Delete duplicate lines
  awk '!seen[$0]++' /etc/resolv.conf > /dev/null
  sort -i -b -u /etc/resolv.conf | sudo tee /etc/resolv.conf > /dev/null
  # Make resolv.conf unwriteable
  sudo chattr +i /etc/resolv.conf
  wsl-print-resolv-conf
}
wsl-print-resolv-conf () {
  echo "/etc/resolv.conf:"
  cat /etc/resolv.conf
}
wsl-delete-last-line-resolv-conf () {
  sed '$d' /etc/resolv.conf
}
wsl-test-connection () {
  wget -q --spider http://google.com
  if [ $? -eq 0 ]; 
    then echo "Online"
    else echo "Offline"
  fi 
}
wsl-wipe-resolv-conf () {
  sudo chattr -i /etc/resolv.conf
  sudo rm /etc/resolv.conf
  sudo touch /etc/resolv.conf
  sudo chattr +i /etc/resolv.conf
}


# ====================================
#                 R 
# ====================================
rpkgs-install () {
  if [ ! "$1" ]; then
    echo "Argument (package name) required (e.g. \`rpkgs-install tidyverse\`)"
    return 1
  fi
  sudo R -q -e "install.packages('$1')"
}
rpkgs-install-github () {
  if [ ! "$1" ]; then
    echo "Argument (package name) required (e.g. \`rpkgs-install-github paul-buerkner/brms\`)"
    return 1
  fi
  if [ $2 = "force" ]; 
    then sudo R -q -e "remotes::install_github('$1', force=TRUE)"
    else sudo R -q -e "remotes::install_github('$1')"
  fi
}




# ====> BDEV-DOTFILES-*
# BDEV-DOTFILE-RELINK: rerun the dotfiles script (creates symlinks to dotfiles in BDEV/dotfiles)
alias bdev-dotfiles-reconfig='bash $BDEV/sh/link_dotfiles.sh'

# ====> BDEV-VSCODE-*
alias bdev-vscode-reconfig='bash $BDEV/sh/vscode.sh'

# ====> BDEV-R-*
# Print bdev R packages not yet installed
alias bdev-r-get-missing-pkgs='R -q --no-echo -e "source(file.path(\"$BDEV\", \"r\", \"install_packages.r\")); bdev.get.missing.packages()"'
# Print installed bdev R packages
alias bdev-r-get-installed-pkgs='R -q --no-echo -e "source(file.path(\"$BDEV\", \"r\", \"install_packages.r\")); bdev.get.installed.packages()"'
# Print all installed R packages (incl. pkgs not listed here)
alias bdev-r-get-installed-pkgs-all='R -q --no-echo -e "source(file.path(\"$BDEV\", \"r\", \"install_packages.r\")); bdev.get.installed.packages(which=\"all\")"'
# Try to install all missing bdev R packages
alias bdev-r-install-all-missing-pkgs='sudo R -q --no-echo -e "source(file.path(\"$BDEV\", \"r\", \"install_packages.r\")); bdev.install.packages(install=\"missing\")"'
# Try to install next missing bdev R package
alias bdev-r-install-next-missing-pkg='sudo R -q --no-echo -e "source(file.path(\"$BDEV\", \"r\", \"install_packages.r\")); bdev.install.packages(install=\"next\")"'
